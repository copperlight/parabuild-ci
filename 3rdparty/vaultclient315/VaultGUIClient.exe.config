<?xml version="1.0" encoding="utf-8" ?>
<configuration>
<system.net>
<defaultProxy>
	<!-- 
            The following entry enables reading of the per user (LAN) Internet settings.
            Adding additional proxy settings, without first setting to "false",
            will individually override. Note that "Automatic configuration" and 
            "automatic configuration scripts" cannot be read.
            
            <proxy> settings:
                usesystemdefault="[true|false]" - Read settings from Internet Options (see above)
                proxyaddress="[string]" - A Uri string of the proxy server to use.
                bypassonlocal="[true|false]" - Enables bypassing of the proxy for local resources.
             -->
			<proxy usesystemdefault="true"/>
			<!--<proxy usesystemdefault="false" proxyaddress="http://proxyhost:proxyport" bypassonlocal="false"/> -->
		<!-- use this section to disable proxy use for matching servers
            example:
        <bypasslist>
            <add address="bypassRegexString" />
        </bypasslist> 
        -->
</defaultProxy>
</system.net>
<appSettings>
	<!--
			enableLogging turns on client-side logging to a file in the path specified in logFilePath.
			If you think you have this file configured properly, but no log file appears, 
			check the system event log (messages are written there if the log file cannot be opened).

			<enableLogging> settings:
				value="[true|false]" - When true logging is enabled, when false no messages will be logged.
	-->
	<add key="enableLogging" value="false" />
	<!--
				logFilePath is the fully qualified path to the name of the file which will be used
				for logging.  If this value is unspecified, the default will be the user process' 
				%TEMP% directory.
				
				<logFilePath> settings:
					value="DRIVE:\PATH\FILENAME" - When true logging is enabled, when false no messages will be logged.
	-->
	<add key="logFilePath" value="" />
	<!--
			classesToLog lets you filter some log messages by class name.  SourceGear support will be
			able to suggest the appropriate class names to use for specific problems.  "all" will
			result in lots and lots (really) of messages.
			
			<classesToLog> settings:
				value="class1,class2,class3,..." - Log these classes; separate with commas.
				value="all" - Log all messages from all classes.
	-->
	<add key="classesToLog" value="" />
	<!--
			includeLoggingStackTraces includes stack traces with each log message in the client-side log.
			enableLogging must be set to "true" for this to have any effect.
			
			<includeLoggingStackTraces> settings:
				value="[true|false]" - When true stack traces are included, when false they are not.
	-->
	<add key="includeLoggingStackTraces" value="false" />
	<!--
			includeThreadInfo includes thread names and IDs with each log message in the client-side log.
			enableLogging must be set to "true" for this to have any effect.
			
			<includeThreadInfo> settings:
				value="[true|false]" - When true thread info is included, when false it is not.
	-->
	<add key="includeThreadInfo" value="true" />
	<!--
			numUploadThreads tells Vault client how many upload threads to use
			when sending files to the server.  A setting of zero tells Vault
			to simply use its default.  The maximum allowable value is five.
			
			<numUploadThreads> settings:
				value="(integer)" - How many upload threads to use
	-->
	<add key="numUploadThreads" value="0" />
</appSettings>
</configuration>
