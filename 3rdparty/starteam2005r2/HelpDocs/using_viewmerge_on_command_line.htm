<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Using viewmerge on the Command Line</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=copyright value="Copyright© 1995-2003, Borland Software Corporation. All rights reserved.">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1302>
<meta name=layout-width content=702>


<!--(Links)=========================================================-->

 <link rel='stylesheet' href='starteam_ns.css'>
<script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='starteam.css'>");}
//-->
</script>
<!--(Scripts)=======================================================-->

<script LANGUAGE="JavaScript" TITLE="BSSC Special Effects" src="./ehlpdhtm.js" name="EHELP_DHTM"></script>

<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
  div.WebHelpPopupMenu {position:absolute; left:0px; top:0px; z-index:4; visibility:hidden;}
  p.WebHelpNavBar {text-align:right;}
-->
</style>
<script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>
<script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.setRelStartPage)
	{
	addTocInfo("Working with the Application\nComparing and Merging\nComparing and Merging Views\nMerging from the Command Line\nUsing viewmerge on the Command Line");

	}


	if (window.setRelStartPage)
	{
	setRelStartPage("starteam.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}

}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
</head>

<!--(Body)==========================================================-->


<body>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
</script>
<h1>Using viewmerge on the Command Line (Windows Client)</h1>

<p class=Body>On the Windows client, you can use viewmerge in the command 
 line to combine two different views. This command:</p>

<ul>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>Allows you to merge only 
 from the source view to the target view, unlike the View Comparison utility. 
 </p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>Is primarily useful only 
 for merging. Although it compares files, you see the results only when 
 you use Visual Merge to resolve text files with conflicts.</p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>Acts on all files in 
 the view because it recurses through the folders.</p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>Merges files based only 
 on their contents.</p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>Ignores item properties.</p></li>
</ul>

<p class=Body>By default, viewmerge merges only text files. During a merge, 
 the Visual Merge application (or another merge utility, if you prefer) 
 displays and compares text files that contain conflicts. After you resolve 
 the conflicts with Visual Merge, viewmerge checks in the merged file and 
 goes to the next pair of files. </p>

<p class=Body>If the output generated by Visual Merge matches the target 
 file’s current contents, the target file is not checked in, because there 
 is no need to do so. If you use the -recordmp option, a merge point is 
 created. If you use the -usemp or -usemptgt option and the source file 
 has not changed since the last merge, no merge takes place, because there 
 is nothing to add to the target file. </p>

<p class=Body>The -norecursion option can be used to compare only the starting 
 folders in the source and target views. </p>

<p class=Body>You can use the -sourcepath option to specify the path to 
 the starting folder in the source view. To specify the path to the starting 
 folder in the target view, use the -targetpath option. The default is 
 the target view's root folder.</p>

<p class=Body>The -noconflicts, -usesource, and -usetarget options allow 
 you to deviate from a default merge. All of these options stop viewmerge 
 from using the Visual Merge utility and provide other ways to handle files 
 that have conflicts. The -usesource or -usetarget options also provide 
 ways to handle binary files.</p>

<p class=Body>The -noconflicts option merges only text files that have 
 no conflicts. If you use this option, viewmerge does not display the Visual 
 Merge application when there are conflicts in the text files to be merged. 
 Instead, it sends error messages to standard error for text files with 
 conflicts. (This is in addition to the error messages sent by viewmerge 
 for binary files.) Files with conflicts are left as they were prior to 
 running the viewmerge command unless you specify a locktype. Then the 
 files with conflicts are locked, using the user ID of the person running 
 the viewmerge command. These files can be merged later when someone is 
 available to review them in Visual Merge. Using -noconflicts allows you 
 to run viewmerge uninterrupted overnight and examine the files with conflicts 
 in the morning. </p>

<p class=Body>The full syntax for this option is: </p>

<p class=Code><span style="font-weight: bold;"><B>-noconflicts</B></span> [<span 
 style="font-weight: bold;"><B>locktype</B></span> [<span style="font-weight: bold;"><B>source</B></span> 
 | <span style="font-weight: bold;"><B>target</B></span>]</p>

<p class=Body>where locktype can be either an exclusive lock (elock) or 
 a non-exclusive lock (nlock). If locktype is not used, no files are locked. 
 When you specify a locktype, you can lock: only the source file by using 
 locktype source, only the target file by using locktype target, or both 
 the source and target files by using either elock or nlock alone. Even 
 when -recordmp is used, the viewmerge command does not record a merge 
 point for files that have conflicts. It just moves on to the next pair 
 of files. </p>

<p class=Body>This option is meaningless if you use -nomerge. If you use 
 -noci with -noconflicts, nothing is checked in. Otherwise, viewmerge checks 
 in the merged files for files that have no conflicts. In addition, when 
 you use these two options together, the -recordmp option is ignored. </p>

<p class=Body>With the -usesource text and -usetarget text options, viewmerge 
 merges the text files that have conflicts by substituting the existing 
 tip revision (in either the source or target view). With the -usesource 
 binary and -usetarget binary options, viewmerge &quot;merges&quot; the 
 binary files that have differences by substituting either the source or 
 the target tip revision.</p>

<p class=Body>The -usecontents option bases the merging of text files on 
 the contents of the source and target files, rather than their MD5 checksum 
 (which is the default basis for text file comparison).</p>

<p class=Body>The -itemtype option indicates which item types are processed 
 for item-sharing and item-deleting operations (specified with the -si, 
 and -di options). When it is not used, these operations apply to all item 
 types. When used, it &nbsp;must 
 be used once for each type to be shared and/or deleted.</p>

<p class=Body>The full syntax is for this option is: </p>

<p class=Code>[<span style="font-weight: bold;"><B>-itemtype FILE</B></span>] 
 [<span style="font-weight: bold;"><B>-itemtype CR</B></span>] [<span style="font-weight: bold;"><B>-itemtype 
 REQ</B></span>] [<span style="font-weight: bold;"><B>-itemtype TASK</B></span>] [<span 
 style="font-weight: bold;"><B>-itemtype</B></span> <span style="font-weight: bold;"><B>TOPIC</B></span>]</p>

<p class=Body>where FILE, CR, REQ, TASK, and TOPIC stand for files, change 
 requests, requirements, tasks, and topics, respectively. If no item-sharing 
 or item-deleting options are used in the command, the -itemtype options 
 are ignored.</p>

<p class=Body>If a file is locked by another user in the view to which 
 you are merging, the application does <span style="font-weight: bold;"><B>not</B></span> 
 create a new revision using the merged file. It is recommended that users 
 unlock their files before anyone performs the merge. Also, you must also 
 lock the files before performing viewmerge if the project properties require 
 an exclusive lock.</p>

<p class=Body>During the viewmerge process, data appears on the screen 
 explaining what is happening. This data is sent to standard output or 
 to standard error. If you prefer, you can have this information logged 
 instead of displayed.</p>

<p class=Body><span style="font-weight: bold;"><B>Notes:</B></span>&nbsp;When 
 a new revision is created with viewmerge, the <span style="font-weight: bold;"><B>Comment</B></span> 
 field provides merge information and the item from the other view used 
 in the merge. For example, if you merge files, the comment might be &quot;Merge 
 from MAINFRM.CPP, Revision 1.3.1.9.&quot;</p>

<h2 class=Code>Syntax</h2>

<p class=Code
	style="font-weight: normal;"><span style="font-weight: bold;"><B>viewmerge 
 -s</B></span> &quot;<span style="font-style: italic;"><I>userName:password@hostName:endpoint</I></span>&quot; 
 [-<span style="font-weight: bold;"><B>pwdfile</B></span> &quot;<span style="font-style: italic;"><I>filename</I></span>&quot;] 
 [-<span style="font-weight: bold;"><B>cmp</B></span>] [<span style="font-weight: bold;"><B>-encrypt</B></span> 
 &quot;e<span style="font-style: italic;"><I>ncryptionType</I></span>&quot;] [-<span 
 style="font-weight: bold;"><B>nologo</B></span>] [<span style="font-weight: bold;"><B>?</B></span>] 
 -<span style="font-weight: bold;"><B>source</B></span> &quot;<span style="font-style: italic;"><I>projectName/viewName</I></span>&quot; 
 -<span style="font-weight: bold;"><B>target</B></span> &quot;<span style="font-style: italic;"><I>projectName/viewName</I></span>&quot; 
 [-<span style="font-weight: bold;"><B>srclabel</B></span> &quot;<span style="font-style: italic;"><I>viewLabel</I></span>&quot; 
 | <span style="font-weight: bold;"><B>-srcstate</B></span> &quot;<span style="font-style: italic;"><I>promotionState</I></span>&quot; 
 |-<span style="font-weight: bold;"><B>srctime</B></span> &quot;<span style="font-style: italic;"><I>dateAndTime</I></span>&quot;] 
 [-<span style="font-weight: bold;"><B>usecontents</B></span>] [-<span style="font-weight: bold;"><B>nomerge</B></span> 
 |-<span style="font-weight: bold;"><B>noconflicts</B></span> [<span style="font-weight: bold;"><B>locktype</B></span> 
 [<span style="font-weight: bold;"><B>source</B></span> | <span style="font-weight: bold;"><B>target</B></span>] 
 | -<span style="font-weight: bold;"><B>outofdate</B></span> -<span style="font-weight: bold;"><B>recordmp</B></span> 
 -<span style="font-weight: bold;"><B>usemp</B></span> |-<span style="font-weight: bold;"><B>usesource</B></span> 
 [<span style="font-weight: bold;"><B>text</B></span> | <span style="font-weight: bold;"><B>binary</B></span>]|-<span 
 style="font-weight: bold;"><B>usetarget</B></span> [<span style="font-weight: bold;"><B>text</B></span> 
 | <span style="font-weight: bold;"><B>binary</B></span>]] [-<span style="font-weight: bold;"><B>noci</B></span>] 
 [-<span style="font-weight: bold;"><B>dry</B></span>] [-<span style="font-weight: bold;"><B>b</B></span>] 
 [-<span style="font-weight: bold;"><B>recordmp</B></span>] [-<span style="font-weight: bold;"><B>usemp</B></span> 
 | -<span style="font-weight: bold;"><B>usemptgt</B></span>] [-<span style="font-weight: bold;"><B>si</B></span> 
 <span style="font-weight: bold;"><B>source</B></span> | <span style="font-weight: bold;"><B>target</B></span>] 
 [-<span style="font-weight: bold;"><B>sf</B></span> <span style="font-weight: bold;"><B>source</B></span> 
 | <span style="font-weight: bold;"><B>target</B></span>] [-<span style="font-weight: bold;"><B>di</B></span> 
 <span style="font-weight: bold;"><B>source</B></span> | <span style="font-weight: bold;"><B>target</B></span>] 
 [-<span style="font-weight: bold;"><B>df</B></span> <span style="font-weight: bold;"><B>source</B></span> 
 | <span style="font-weight: bold;"><B>target</B></span>] [-<span style="font-weight: bold;"><B>itemtype 
 FILE</B></span>] [-<span style="font-weight: bold;"><B>itemtype CR</B></span>] [-<span 
 style="font-weight: bold;"><B>itemtype REQ</B></span>] [-<span style="font-weight: bold;"><B>itemtype 
 TASK</B></span>] [-<span style="font-weight: bold;"><B>itemtype TOPIC</B></span>]</p>

<h2>&nbsp;</h2>

<p class=Body>&nbsp;</p>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>

</html>
