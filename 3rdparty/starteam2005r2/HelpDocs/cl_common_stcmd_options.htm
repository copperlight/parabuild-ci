<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Using Common stcmd Options</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=copyright value="Copyright© 1995-2003, Borland Software Corporation. All rights reserved.">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=4144>
<meta name=layout-width content=707>


<!--(Links)=========================================================-->

 <link rel='stylesheet' href='starteam_ns.css'>
<script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='starteam.css'>");}
//-->
</script>
<!--(Scripts)=======================================================-->

<script LANGUAGE="JavaScript" TITLE="BSSC Special Effects" src="./ehlpdhtm.js" name="EHELP_DHTM"></script>

<style type="text/css">
<!--
h4.whs1 {margin-left: 0px;}
-->
</style>
<script type="text/javascript" language="JavaScript">
<!--
if ((navigator.appName == "Netscape") && (parseInt(navigator.appVersion) == 4))
{
  var strNSS = "<style type='text/css'>";
  strNSS += "h4.whs1 {margin-left:1; }";
  strNSS +="</style>";
  document.write(strNSS);
}
//-->
</script>
<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
  div.WebHelpPopupMenu {position:absolute; left:0px; top:0px; z-index:4; visibility:hidden;}
  p.WebHelpNavBar {text-align:right;}
-->
</style>
<script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>
<script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.setRelStartPage)
	{
	addTocInfo("Working with the Application\nUsing the Command Line Interface\nUsing Common stcmd Options");

	}


	if (window.setRelStartPage)
	{
	setRelStartPage("starteam.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}

}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
</head>

<!--(Body)==========================================================-->


<body>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
</script>
<h1>Using Common stcmd Options</h1>

<p class=Body>Some options show up in all or almost all of the stcmd commands. 
 In each command, they have exactly the same meaning, so they are explained 
 in this section and not repeated later. </p>

<p class=Body>All command-line syntax is interpreted as UNIX rather than 
 Windows syntax.<br>
All options can be written with either a hyphen ( - ) or slash mark ( / 
 ), depending on what your operating system understands. When this chapter 
 indicates that an option requires quotations marks, using them is recommended, 
 despite the fact that the option may be accepted by your operating system 
 without them. Adopting this policy is both consistent and safe.</p>

<p class=Body>Windows operating systems require quotation marks when a 
 space is part of the option. For example, when a revision comment is several 
 words, it must be enclosed in quotation marks. A one-word comment does 
 not require quotation marks, although they can be used. &nbsp;Be 
 aware that commands sent via the Java command line fail when there are 
 spaces in the names of working folders and files. You cannot use spaces 
 in UNIX names unless they are enclosed in double quotation marks.</p>

<p class=Body>&nbsp;</p>

<p class=Body><span style="font-weight: bold;"><B>Note:</B></span> Options that 
 do not appear in all commands or vary in meaning from command to command 
 are explained with the commands.</p>

<p class=Body>&nbsp;</p>

<h2>List of Common Options</h2>

<h3>-active</h3>

<p class=Body>Indicates the active process item.</p>

<h3><span style="font-weight: bold;"><B>-cmp</B></span></h3>

<p class=Body>Compresses all the data sent between the workstation and 
 the server and decompresses it when it arrives. Without this option, no 
 compression takes place.</p>

<p class=Body>Compression is most useful and appropriate when the client 
 and server communicate over a slow connection. To decide whether to use 
 compression, a small test case may be helpful. You must consider whether 
 the time spent compressing and uncompressing data is better than the longer 
 transfer time required to send uncompressed data sent over a slow connection.</p>

<h3>-csf</h3>

<p class=Body>When the command maps the folder specified in the -p option 
 to the underlying application folder, using -csf causes the command to 
 differentiate application folders based on the case-sensitive spelling 
 of their names &nbsp;(This 
 option does not apply to the case-sensitivity of file names in the folders.) 
 For example, with -csf, folders named doc and Doc are recognized as different 
 folders. Without this option, either folder could be recognized as the 
 &quot;doc&quot; folder. </p>

<p class=Body>The default is that folders are not differentiated based 
 on the case of letters in their names. </p>

<h3>-encrypt</h3>

<p class=Body>Encrypts all data sent between the workstation and the server 
 and decrypts it when it arrives. Without this option, no encryption takes 
 place. Encryption protects files and other project information from being 
 read by unauthorized parties over unsecured network lines. </p>

<p class=Body>The full syntax is:</p>

<p class=Code><span style="font-weight: bold;"><B>-encrypt</B></span> <span style="font-style: italic;"><I>encryptionType</I></span> 
 </p>

<p class=Body>The types of encryption are:</p>

<p class=Body-Indent-1>RC4 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RSA 
 R4 stream cipher (fast)</p>

<p class=Body-Indent-1>RC2_ECB &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RSA 
 R2 block cipher (Electronic Codebook)</p>

<p class=Body-Indent-1>RC2_CBC &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RSA 
 R2 block cipher (Cipher Block Chaining)</p>

<p class=Body-Indent-1>RC2_CFB &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Windows 
 platforms only) RSA R2 block cipher (Cipher Feedback)</p>

<p class=Body>These encryption types are ordered from fastest to slowest. 
 Each of the slower encryption types is safer than the one preceding it.</p>

<p class=Body><span style="font-weight: bold;"><B>Note:</B></span> For platforms 
 other than Windows, the public and private keys used in the encryption 
 process are not created automatically. They are stored in a file in the 
 user’s home directory. This options file is named .starteam. It contains 
 a variable or shell variable called keyfile. The keyfile variable specifies 
 the location of the file that contains the public and private keys. If 
 you do not specify the keyfile variable, an error occurs. When you specify 
 the keyfile variable but the file does not exist, the client generates 
 a random pair of keys, creates the file, and stores the keys in it. Be 
 sure to secure this file. For example, in UNIX, only its owner should 
 be able to read it.</p>

<h3>-eol [ on | off ]</h3>

<p>Performs end-of-line conversion of text files.</p>

<h3>-f NCI</h3>

<p>Apply command to all files needing check in. &nbsp;-f 
 NCI is ignored if -filter is used.</p>

<h3>-f NCO</h3>

<p>Apply command to all files being checked out. -f NCO is ignored if -filter 
 is used.</p>

<h3>-filter</h3>

<p class=Body>File status filter. Statuses are: C = Current, M = Modified, 
 O = Out-of-Date, N = Not-in-View, I = Missing, G = Merge, and U = Unknown. 
 For example, using CM applies a command only to those files with a status 
 of Current or Modified. </p>

<p class=Body>-filter takes precedence over -f NCI. If you use G, O, or 
 U, you must also specify -i or -o. Otherwise the G, O, or U is ignored.</p>

<p class=Body>-filter also takes precedence over -f NCO. If you use G, 
 M, O, or U, you must also specify -merge or -o to force the checkout operation. 
 Otherwise, the G, M, O, or U is ignored. </p>

<h3>-fp</h3>

<p class=Body>Overrides the specified application folder’s working folder 
 or working directory. This is equivalent to setting an alternate working 
 path for the folder.</p>

<p class=Body>While this option allows you to use a different working folder 
 than the one specified by the view, its critical importance is to provide 
 cross-platform compatibility. For example, UNIX and Windows systems specify 
 drive and directory path names in incompatible ways. </p>

<p class=Body>While the path &quot;D:\MYPRODUCT\DEVELOPMENT\SOURCE&quot; 
 is understood on a Windows platform, it is not understood on a UNIX platform. 
 Use this option to define the working path if your platform does not understand 
 the path specified in the project. </p>

<p class=Body>A backslash (\) is interpreted as an escape character when 
 it precedes quotation marks. As a result, an error occurs in the following 
 example:</p>

<p class=Code>stcmd ci -p &quot;xxx&quot; -fp &quot;C:\&quot; &quot;*&quot;</p>

<p class=Body>which is interpreted as:</p>

<p class=Code>stcmd ci -p &quot;xxx&quot; -fp &quot;C:&quot; *&quot;</p>

<p class=Body>To avoid a situation like this, escape the final character 
 in &quot;C:\&quot; as follows:</p>

<p class=Code>stcmd ci -p &quot;xxx&quot; -fp &quot;C:\\&quot; &quot;*&quot;</p>

<p class=Body>Or avoid it as follows when the -rp path doesn’t end with 
 the root folder as in &quot;C:\orion\&quot;:</p>

<p class=Code>stcmd ci -p &quot;xxx&quot; -fp &quot;C:\orion&quot; &quot;*&quot;</p>

<p class=Body>The full syntax is:</p>

<p class=Code>-rp &quot;folderName&quot;</p>

<p class=Body>Folder is the Windows term and appears in the user interface. 
 Directory is the correct term for the UNIX platform.</p>

<h3 class=Body>-h</h3>

<p class=Body>Invokes help. -help works with each command, although not 
 shown in the syntax.</p>

<h3>-help</h3>

<p class=Body>Invokes help. -help works with each command, although not 
 shown in the syntax.</p>

<h4 class="whs1">files...</h4>

<p class=Body>Specifies the files to be used in the command by name or 
 by file name-pattern specification (such as “*.c”). All options are interpreted 
 using the semantic conventions of UNIX instead of Windows because the 
 UNIX conventions are more specific. Thus, &nbsp;“*” 
 rather than “*.*” means “all files.” The pattern “*.*” means “all files 
 with file name extensions.” For example, “star*.*” finds starteam.doc 
 and starteam.cpp but not starteam. To find all of these, you could use 
 “star*”.</p>

<p class=Body>Without this option, the default is “*”. When used, this 
 option must always be the last option. Any options after it are ignored.</p>

<p class=Body>Enclosing this option in quotation marks is recommended, 
 regardless of platform. On Windows platforms, file and folder names that 
 contain spaces will not be interpreted correctly. On UNIX platforms, the 
 shell will expand the option, then pass the list of items produced by 
 the expansion to the client. Frequently, this produces unintended results. 
 You can avoid both of these consequences by always enclosing this option 
 in quotation marks. Only if it is essential that the option be expanded 
 by the UNIX shell is it advisable to omit the quotation marks. Failures 
 of batch scripts on either platform may be due to this omission.</p>

<h3>-i</h3>

<p class=Body>Prompts user to confirm check in when file status is Merge, 
 Out of Date, or Unknown.</p>

<h3>-is </h3>

<p class=Body>Applies the command to all child folders. Without this option, 
 the command applies only to the specified folder.</p>

<p class=Body>When this option is used with add-folder, you can add an 
 entire branch of folders to the folder hierarchy. When it is used with 
 add-project, you can create a project with more than just a root folder.</p>

<h3>-l</h3>

<p>Locks a file.</p>

<h3>-mark</h3>

<p>Marks a change request as fixed, a requirement as complete, or a task 
 as finished.</p>

<p>&nbsp;</p>

<h3>-merge</h3>

<p class=Body>Enables you to merge the working file with the revision being 
 checked out and with the revision upon which both of these is based. The 
 working file must have the status Merge. </p>

<p class=Body>If you use the -merge option, you cannot use the -i or -o 
 option. If you do not specify -merge, files with the status Merge are 
 ignored unless you specify -o and force the check-out. For information 
 about additionaloptions that can be used with -merge, see the<span style="font-style: italic;"><I> 
 StarTeam User's Guide</I></span>.</p>

<h3>-nel</h3>

<p>Nonexclusively locks a file.</p>

<h3>-nologo</h3>

<p class=Body>Supresses the copyright notice. -nologo works with each command, 
 although not shown in the syntax.</p>

<h3>-nomove</h3>

<p class=Body>Do not move labels if already attached.</p>

<h3>-o</h3>

<p class=Body>Forces check in.</p>

<h3 class=Body>-p</h3>

<p class=Body>Indicates the view or folder is to be used; also provides 
 the user name and password needed to access the server.</p>

<p class=Body>The full syntax is:</p>

<p class=Code><span style="font-weight: bold;"><B>-p</B></span> <span style="font-style: italic;"><I>&quot;userName:password@hostName:endpoint/projectName/viewName/folderHierarchy/&quot;</I></span></p>

<p class=Body>For example:</p>

<p class=Code>-p “bsmith:rocketfive@orion:49201/StarDraw/StarDraw/SourceCode/”</p>

<ul>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>If the user name is omitted, 
 the current user name is used.</p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>If the password is omitted, 
 the user is prompted to enter the password. When the user types a password, 
 the characters are not displayed on the screen.</p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>If the host name is omitted, 
 the default is localhost.</p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>Entering an endpoint 
 (port number) is required. The default is 49201.</p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>The project name is always 
 required.</p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>A view hierarchy should 
 be used to identify the view. Use the colon (:) as a delimiter between 
 view names. The view hierarchy should always include the root view. For 
 example, &quot;StarDraw:Release 4:Service Packs&quot; indicates that the 
 view to be used is the Service Packs view, which is a child of the Release 
 4 view and a grandchild of the StarDraw root view. If the view name is 
 omitted, the root view is used. If the view is the only view in that project 
 with that name, you can use only the view name. Doing this is not recommended, 
 however, because another view with that name could be created at a later 
 date. </p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>A folder hierarchy should 
 be used to identify the folder. Use the forward slash (/) as a delimiter 
 between folder names. The folder hierarchy never includes the root folder. 
 Omit the folder hierarchy if the file is in the view’s root folder. For 
 example, if the root folder of the view is StarDraw and the hierarchy 
 to your files is &quot;StarDraw/SourceCode/Client&quot;, use only &quot;SourceCode/Client&quot;.</p></li>
</ul>

<p class=Body>If any of the variables used with this option contain characters 
 that are used as delimiters, use the percent sign (%) followed by the 
 hex code for each of those characters. For example, if &quot;@&quot; appears 
 as a character in a password, you must replace it with &quot;%40&quot;.</p>

<p class=Body-Indent-1>For &quot;:&quot;, use &quot;%3a&quot;</p>

<p class=Body-Indent-1>For &quot;/&quot;, use &quot;%2f&quot;</p>

<p class=Body-Indent-1>For &quot;@&quot;, use &quot;%40&quot;</p>

<p class=Body-Indent-1>For &quot;%&quot;, use &quot;%25</p>

<p class=Body>In UNIX and other operating systems, some special characters 
 must be preceded by a backslash &quot;\&quot; or another escape character. 
 In the -p option, you can replace such characters with hex codes. For 
 example, &quot;%3c&quot; could be used in UNIX instead of &quot;\&lt;&quot;.</p>

<p class=Body-Indent-1>For a space, use &quot;%20&quot;</p>

<p class=Body-Indent-1>For &quot;&lt;&quot;, use &quot;%3c&quot;</p>

<p class=Body-Indent-1>For &quot;&gt;&quot;, use &quot;%3e&quot;</p>

<h3>-pwdfile</h3>

<p class=Body>Specifies the path to a file that stores the user’s password. 
 This option overrides the password used as part of the -p option. It prevents 
 others from seeing the user’s password on the command line.</p>

<p class=Body>The full syntax is:</p>

<p class=Code><span style="font-weight: bold;"><B>-pwdfile</B></span> <span style="font-style: italic;"><I>&quot;filePath&quot;</I></span></p>

<h3>-q</h3>

<p class=Body>Suppresses progress reporting. Without this option, messages 
 about each action appear on the screen as the action is performed.</p>

<h3>-r</h3>

<p class=Body>Reason for check in.</p>

<h3>-rf</h3>

<p class=Body>Precedes name of file that contains the reason for the check 
 in.</p>

<h3>-ro</h3>

<p>Sets file as read-only after operation.</p>

<h3>-rp</h3>

<p class=Body>Specifies or overrides the working folder or working directory 
 for the view’s root folder. The stcmd add-project command uses this option 
 to specify the new view's root folder's working folder. See -fp for additional 
 information. </p>

<p class=Body>The full syntax is:</p>

<p class=Body>-rp &quot;<span style="font-style: italic;"><I>folderPath</I></span>&quot;</p>

<h3 class=Body>-rw</h3>

<p>Sets file as read-write after operation.</p>

<h3 class=Body>-stop</h3>

<p class=Body>Often used with -x. Halts execution of the command-line when 
 the first error is encountered. Without this option, execution continues 
 despite errors.</p>

<h3>-u</h3>

<p class=Body>Unlocks a file.</p>

<h3>-vl</h3>

<p>Version label.</p>

<h3 class=Body>-x</h3>

<p class=Body>Switches between interactive and batch modes. Without this 
 option, you must confirm error messages interactively, and the exit codes 
 may not be available. With this option, no error messages are displayed, 
 but exit codes are set. The exit codes are 0 for success and 1 for failure.</p>

<h3>-?</h3>

<p class=Body>Invoke help. -? works with each command, although not shown 
 in the syntax. This information is sent to stderr rather than stdout. 
 To capture this information from the Windows 2000 command prompt, you 
 need to use &quot;2&gt;&quot; rather than &quot;&gt;&quot;.</p>

<p class=Body>&nbsp;</p>

<h2 class=Heading2norule>Special Characters Used in File Specifications</h2>

<p class=Body><span style="font-weight: bold;"><B>*</B></span> Matches any string 
 including an empty string. For example, &quot;x*z&quot; will match &quot;xyz&quot; 
 and &quot;xz&quot;.</p>

<p class=Body>? Matches any single character. For example, &quot;a?c&quot; 
 will match &quot;abc&quot; but NOT &quot;ac&quot;.</p>

<p class=Body>[...] Matches any one of the characters enclosed by the left 
 and right brackets. </p>

<p class=Body>A pair of characters separated by a hyphen( - )specifies 
 a range of characters to be matched. </p>

<p class=Body>If the first character following a left bracket ( [ ) is 
 an exclamation point ( ! ) or a caret ( ^ ), the rest of the characters 
 are not matched. Any character not enclosed in the brackets is matched. 
 </p>

<p class=Body>A hyphen ( - ) or right bracket ( ] ) may be matched by including 
 it as the first or last character in a bracketed set. For example, &quot;x[a 
 - d]y&quot; matches &quot;xby&quot; but not &quot;xey&quot; while &quot;x[!a 
 - d]y&quot; matches &quot;xey&quot; but not &quot;xby&quot;.</p>

<p class=Body>If you want to use an asterisk (*), question mark (?), or 
 left bracket ( [ ) in a pattern, you must precede it with the escape character 
 (that is, a backslash \ ). </p>

<p class=Body>If you use * rather than “*” to indicate all files, a UNIX 
 shell expands it into a series of items and passes this series as a group 
 of options to the stcmd command. This can cause problems (for example, 
 when you are checking out missing files) so it is best to use &quot;*&quot; 
 and avoid unwanted complications.</p>

<p class=Body>If you use a set of file patterns, each pattern should be 
 enclosed in its own set of quotation marks. For example, you can use &quot;*.bat&quot; 
 &quot;*.c&quot;, but you cannot use &quot;*.bat *.c&quot;.</p>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>

</html>
