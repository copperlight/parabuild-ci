<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Using StarTeam with PVCS</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=copyright value="Copyright© 1995-2003, Borland Software Corporation. All rights reserved.">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=904>
<meta name=layout-width content=702>


<!--(Links)=========================================================-->

 <link rel='stylesheet' href='starteam_ns.css'>
<script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='starteam.css'>");}
//-->
</script>
<!--(Scripts)=======================================================-->

<script LANGUAGE="JavaScript" TITLE="BSSC Special Effects" src="./ehlpdhtm.js" name="EHELP_DHTM"></script>

<style type="text/css">
<!--
h1.whs1 {margin-left: 36.00pt; text-indent: -36.00pt;}
-->
</style>
<script type="text/javascript" language="JavaScript">
<!--
if ((navigator.appName == "Netscape") && (parseInt(navigator.appVersion) == 4))
{
  var strNSS = "<style type='text/css'>";
  strNSS += "h1.whs1 {text-indent:1; }";
  strNSS +="</style>";
  document.write(strNSS);
}
//-->
</script>
<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
  div.WebHelpPopupMenu {position:absolute; left:0px; top:0px; z-index:4; visibility:hidden;}
  p.WebHelpNavBar {text-align:right;}
-->
</style>
<script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>
<script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.setRelStartPage)
	{
	addTocInfo("Administering the Application\nInteroperating with Other Programs\nStarTeam and PVCS\nUsing StarTeam with PVCS");

	}


	if (window.setRelStartPage)
	{
	setRelStartPage("starteam.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}

}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
</head>

<!--(Body)==========================================================-->


<body>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
</script>
<h1 class="whs1">Using StarTeam 
 with PVCS</h1>

<p class=Body>When the StarTeam Windows client is first introduced at a 
 company that uses PVCS, some team members usually continue solely with 
 the PVCS user interface, while others rely on the Windows client to access 
 PVCS archives, the files that store the evolutionary history of each working 
 file. Both interfaces can be used with the same files, because StarTeam 
 projects can be &quot;wrapped around” PVCS archives. You perform the wrapping 
 process by creating a project in StarTeam for the PVCS archives.</p>

<p class=Body>StarTeam interoperates with PVCS in three ways:</p>

<ul>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>Initially, a StarTeam 
 project is created by wrapping a set of PVCS archives.</p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>As users check file revisions 
 into StarTeam, the application updates the PVCS archives so that PVCS 
 users can use the new revisions.</p></li>
	
	<li class=kadov-p-CBullet-1><p class=Bullet-1>As PVCS users check file 
 revisions into PVCS, StarTeam's foreign refresh feature makes the new 
 revisions available to StarTeam users.</p></li>
</ul>

<p class=Body>PVCS uses project databases, each of which contains a hierarchical 
 set of projects. A PVCS database or subset of that database relies on 
 a configuration file (.cfg) that can be turned into a StarTeam project. 
 When StarTeam is wrapped around a PVCS project, the PVCS project database 
 (or subset of a database) becomes a StarTeam project, and the PVCS projects 
 become StarTeam folders.</p>

<p class=Body>PVCS files are actually archives from which past revisions 
 of files can be derived as working files. StarTeam stores files differently, 
 but can also retrieve past revisions as working files. PVCS archives contain 
 branches with floating labels that represent parallel lines of development, 
 while StarTeam uses views for this purpose.</p>

<p class=Body>StarTeam uses the PVCS command line to perform operations. 
 In some cases, the command line operates differently from the PVCS graphical 
 user interface.</p>

<h2 class=Heading2norule>Branch Support for PVCS</h2>

<p class=Body>PVCS archives may contain branches with floating labels that 
 represent parallel lines of development. StarTeam uses views for this 
 purpose. During the wrapping process, views can be created for branches 
 that have floating labels. If a branch does not have a floating label, 
 none of its descendants can become views in StarTeam, even if they have 
 floating labels themselves. </p>

<p class=Body>The wrapping process creates a view for the first, and only 
 the first, floating label associated with each branch. The view name is 
 the same as the floating label’s name. The view is a branching view that 
 is set to branch all files and that has a floating configuration. Additional 
 labels result in error messages in the pvcs-err.<span style="font-style: italic;"><I>locale</I></span>.log 
 file and should be removed from the file.</p>

<p class=Body>A branch that does not have a floating label is also reported 
 in the pvcs-err.<span style="font-style: italic;"><I>locale</I></span>.log file. 
 A message notifies you that such a branch has been found, which allows 
 you to stop the wrapping process, add floating branch labels where appropriate, 
 and start the wrapping process again. If the branch labels are unimportant, 
 you can continue the wrapping process, knowing that these branches will 
 not become views in the project.</p>

<p class=Body>If a floating label is on a trunk rather than a branch, it 
 turns into a revision label on the last revision for the segment of the 
 trunk to which it applies. </p>

<p class=Body>To determine what PVCS branch to include in the view for 
 an archive that does not contain the branch label, StarTeam examines the 
 archives that contain the branch label to identify the immediate ancestor 
 of the branch. If an archive without the branch label contains the ancestor 
 branch, the application includes that branch in the view. </p>

<p class=Body>When different archives have different ancestors for the 
 same branch label, StarTeam uses the most recent of the ancestor branches 
 found in the unlabeled archive. That is, it uses the branch for which 
 the associated PVCS revision number has the most decimals, as this should 
 be the most recent of the ancestor branches.</p>

<p class=Body>Fixed labels are converted to revision labels, with one exception. 
 Suppose an archive has a fixed label that matches the name of a view (that 
 is, the fixed label has the same name as a floating label in another archive). 
 In this situation, StarTeam places the file in the view and pins it to 
 the revision with the fixed label.</p>

<p class=Body><span style="font-weight: bold;"><B>Important:&nbsp;</B></span>The 
 PVCS Developer's Toolkit API allows a maximum of 64 characters for dot 
 notation. When the dot notation for a revision exceeds 64 characters, 
 it is truncated by the API. When this occurs, StarTeam skips the revisions 
 with partial dot notations, since there is no way to correctly place them 
 within the archive. It also alerts the user during the wrapping process 
 and logs the archive and revision numbers skipped in the wrapping process.</p>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>

</html>
